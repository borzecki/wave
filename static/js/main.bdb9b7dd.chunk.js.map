{"version":3,"sources":["perlin.js","post/Glitchpass.js","post/Waterpass.js","Effects.jsx","App.js","serviceWorker.js","index.js"],"names":["Grad","x","y","z","this","grad3","p","perm","Array","gradP","seed","Math","floor","i","v","sqrt","fade","t","lerp","a","b","perlin3","X","Y","Z","n000","dot3","n001","n010","n011","n100","n101","n110","n111","u","w","DigitalGlitch","uniforms","tDiffuse","value","tDisp","byp","amount","angle","seed_x","seed_y","distortion_x","distortion_y","col_s","vertexShader","fragmentShader","GlitchPass","dt_size","Pass","call","undefined","console","error","shader","UniformsUtils","clone","generateHeightmap","material","ShaderMaterial","camera","OrthographicCamera","scene","Scene","quad","Mesh","PlaneBufferGeometry","frustumCulled","add","factor","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","deltaTime","maskActive","max","texture","random","_Math","randFloat","PI","renderToScreen","setRenderTarget","clear","data_arr","Float32Array","length","val","DataTexture","RGBFormat","FloatType","needsUpdate","WaterShader","type","time","resolution","WaterPass","Vector2","Effects","down","composer","useRef","useThree","gl","size","aspect","useMemo","THREE","width","height","useEffect","current","setSize","useFrame","ref","args","attachArray","extend","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","FilmPass","Waves","groups","noisefn","props","mesh","state","clock","getElapsedTime","groupObjects","map","group","fromPairs","name","geometry","vertices","groupValues","coefficient","magnitude","speed","move","sum","verticesNeedUpdate","attach","color","wireframe","NumberControlGroup","setValue","step","className","htmlFor","onChange","event","target","Control","controlGroups","controls","key","ControlGroup","control","App","useState","set","setGroups","curry","groupIndex","controlIndex","findIndex","propEq","updated","adjust","assoc","mouse","onMouseMove","useCallback","clientX","clientY","window","innerWidth","innerHeight","isMobile","test","navigator","userAgent","shadowMap","pixelRatio","min","devicePixelRatio","rotation","position","onMouseUp","onMouseDown","alpha","antialias","logarithmicDepthBuffer","onCreated","setClearColor","toneMapping","outputEncoding","perlin","scale","intensity","onClick","append","Boolean","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"wTAAMA,E,WACF,WAAYC,EAAGC,EAAGC,GAAI,oBAClBC,KAAKH,EAAIA,EACTG,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,E,iDAERF,EAAGC,GACJ,OAAOE,KAAKH,EAAIA,EAAIG,KAAKF,EAAIA,I,2BAE5BD,EAAGC,EAAGC,GACP,OAAOC,KAAKH,EAAIA,EAAIG,KAAKF,EAAIA,EAAIE,KAAKD,EAAIA,M,KAI9CE,EAAQ,CACR,IAAIL,EAAK,EAAG,EAAG,GACf,IAAIA,GAAM,EAAG,EAAG,GAChB,IAAIA,EAAK,GAAI,EAAG,GAChB,IAAIA,GAAM,GAAI,EAAG,GACjB,IAAIA,EAAK,EAAG,EAAG,GACf,IAAIA,GAAM,EAAG,EAAG,GAChB,IAAIA,EAAK,EAAG,GAAI,GAChB,IAAIA,GAAM,EAAG,GAAI,GACjB,IAAIA,EAAK,EAAG,EAAG,GACf,IAAIA,EAAK,GAAI,EAAG,GAChB,IAAIA,EAAK,EAAG,GAAI,GAChB,IAAIA,EAAK,GAAI,GAAI,IAGjBM,EAAI,CACJ,IACA,IACA,IACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,EACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,EACA,GACA,GACA,IACA,GACA,GACA,GACA,IACA,EACA,IACA,IACA,IACA,IACA,GACA,EACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,EACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,EACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,KAGAC,EAAO,IAAIC,MAAM,KACjBC,EAAQ,IAAID,MAAM,MAIF,SAASE,GACrBA,EAAO,GAAKA,EAAO,IAEnBA,GAAQ,QAGZA,EAAOC,KAAKC,MAAMF,IACP,MACPA,GAAQA,GAAQ,GAGpB,IAAK,IAAIG,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAIC,EAEAA,EADI,EAAJD,EACIP,EAAEO,GAAa,IAAPH,EAERJ,EAAEO,GAAOH,GAAQ,EAAK,IAG9BH,EAAKM,GAAKN,EAAKM,EAAI,KAAOC,EAC1BL,EAAMI,GAAKJ,EAAMI,EAAI,KAAOR,EAAMS,EAAI,KAI9CJ,CAAK,GASWC,KAAKI,KAAK,GACZJ,KAAKI,KAAK,GAkMxB,SAASC,EAAKC,GACV,OAAOA,EAAIA,EAAIA,GAAKA,GAAS,EAAJA,EAAQ,IAAM,IAG3C,SAASC,EAAKC,EAAGC,EAAGH,GAChB,OAAQ,EAAIA,GAAKE,EAAIF,EAAIG,EAItB,IAyBMC,EAAU,SA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","file":"static/js/main.bdb9b7dd.chunk.js","sourcesContent":["class Grad {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    dot2(x, y) {\n        return this.x * x + this.y * y;\n    }\n    dot3(x, y, z) {\n        return this.x * x + this.y * y + this.z * z;\n    }\n}\n\nvar grad3 = [\n    new Grad(1, 1, 0),\n    new Grad(-1, 1, 0),\n    new Grad(1, -1, 0),\n    new Grad(-1, -1, 0),\n    new Grad(1, 0, 1),\n    new Grad(-1, 0, 1),\n    new Grad(1, 0, -1),\n    new Grad(-1, 0, -1),\n    new Grad(0, 1, 1),\n    new Grad(0, -1, 1),\n    new Grad(0, 1, -1),\n    new Grad(0, -1, -1)\n];\n\nvar p = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180\n];\n// To remove the need for index wrapping, double the permutation table length\nvar perm = new Array(512);\nvar gradP = new Array(512);\n\n// This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\nexport const seed = function(seed) {\n    if (seed > 0 && seed < 1) {\n        // Scale the seed out\n        seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if (seed < 256) {\n        seed |= seed << 8;\n    }\n\n    for (var i = 0; i < 256; i++) {\n        var v;\n        if (i & 1) {\n            v = p[i] ^ (seed & 255);\n        } else {\n            v = p[i] ^ ((seed >> 8) & 255);\n        }\n\n        perm[i] = perm[i + 256] = v;\n        gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n};\n\nseed(0);\n\n/*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n\n// Skewing and unskewing factors for 2, 3, and 4 dimensions\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\nvar G2 = (3 - Math.sqrt(3)) / 6;\n\nvar F3 = 1 / 3;\nvar G3 = 1 / 6;\n\n// 2D simplex noise\nexport const simplex2 = function(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin) * F2; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var t = (i + j) * G2;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) {\n        // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        i1 = 1;\n        j1 = 0;\n    } else {\n        // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        i1 = 0;\n        j1 = 1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n    var gi0 = gradP[i + perm[j]];\n    var gi1 = gradP[i + i1 + perm[j + j1]];\n    var gi2 = gradP[i + 1 + perm[j + 1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 < 0) {\n        n0 = 0;\n    } else {\n        t0 *= t0;\n        n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 < 0) {\n        n1 = 0;\n    } else {\n        t1 *= t1;\n        n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 < 0) {\n        n2 = 0;\n    } else {\n        t2 *= t2;\n        n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n};\n\n// 3D simplex noise\nexport const simplex3 = function(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var k = Math.floor(zin + s);\n\n    var t = (i + j + k) * G3;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t;\n    var z0 = zin - k + t;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n        if (y0 >= z0) {\n            i1 = 1;\n            j1 = 0;\n            k1 = 0;\n            i2 = 1;\n            j2 = 1;\n            k2 = 0;\n        } else if (x0 >= z0) {\n            i1 = 1;\n            j1 = 0;\n            k1 = 0;\n            i2 = 1;\n            j2 = 0;\n            k2 = 1;\n        } else {\n            i1 = 0;\n            j1 = 0;\n            k1 = 1;\n            i2 = 1;\n            j2 = 0;\n            k2 = 1;\n        }\n    } else {\n        if (y0 < z0) {\n            i1 = 0;\n            j1 = 0;\n            k1 = 1;\n            i2 = 0;\n            j2 = 1;\n            k2 = 1;\n        } else if (x0 < z0) {\n            i1 = 0;\n            j1 = 1;\n            k1 = 0;\n            i2 = 0;\n            j2 = 1;\n            k2 = 1;\n        } else {\n            i1 = 0;\n            j1 = 1;\n            k1 = 0;\n            i2 = 1;\n            j2 = 1;\n            k2 = 0;\n        }\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3;\n\n    // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n    var gi0 = gradP[i + perm[j + perm[k]]];\n    var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n    var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n    var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]];\n\n    // Calculate the contribution from the four corners\n    var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n    if (t0 < 0) {\n        n0 = 0;\n    } else {\n        t0 *= t0;\n        n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n    if (t1 < 0) {\n        n1 = 0;\n    } else {\n        t1 *= t1;\n        n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n    if (t2 < 0) {\n        n2 = 0;\n    } else {\n        t2 *= t2;\n        n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n    if (t3 < 0) {\n        n3 = 0;\n    } else {\n        t3 *= t3;\n        n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n};\n\n// ##### Perlin noise stuff\n\nfunction fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nfunction lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n}\n\n// 2D Perlin Noise\nexport const perlin2 = function(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x),\n        Y = Math.floor(y);\n    // Get relative xy coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n\n    // Calculate noise contributions from each of the four corners\n    var n00 = gradP[X + perm[Y]].dot2(x, y);\n    var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n    var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n    var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1);\n\n    // Compute the fade curve value for x\n    var u = fade(x);\n\n    // Interpolate the four results\n    return lerp(lerp(n00, n10, u), lerp(n01, n11, u), fade(y));\n};\n\n// 3D Perlin Noise\nexport const perlin3 = function(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x),\n        Y = Math.floor(y),\n        Z = Math.floor(z);\n    // Get relative xyz coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    z = z - Z;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n    Z = Z & 255;\n\n    // Calculate noise contributions from each of the eight corners\n    var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n    var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n    var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n    var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n    var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n    var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n    var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n    var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(\n        x - 1,\n        y - 1,\n        z - 1\n    );\n\n    // Compute the fade curve value for x, y, z\n    var u = fade(x);\n    var v = fade(y);\n    var w = fade(z);\n\n    // Interpolate\n    return lerp(\n        lerp(lerp(n000, n100, u), lerp(n001, n101, u), w),\n        lerp(lerp(n010, n110, u), lerp(n011, n111, u), w),\n        v\n    );\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n/**\n * @author felixturner / http://airtight.cc/\n *\n * RGB Shift Shader\n * Shifts red and blue channels from center in opposite directions\n * Ported from http://kriss.cx/tom/2009/05/rgb-shift/\n * by Tom Butterworth / http://kriss.cx/tom/\n *\n * amount: shift distance (1 is width of input)\n * angle: shift angle in radians\n */\n\nimport { DataTexture, FloatType, Math as _Math, Mesh, OrthographicCamera, PlaneBufferGeometry, RGBFormat, Scene, ShaderMaterial, UniformsUtils } from 'three'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass.js'\n\nvar DigitalGlitch = {\n  uniforms: {\n    tDiffuse: { value: null }, //diffuse texture\n    tDisp: { value: null }, //displacement texture for digital glitch squares\n    byp: { value: 0 }, //apply the glitch ?\n    amount: { value: 0.08 },\n    angle: { value: 0.02 },\n    seed: { value: 0.02 },\n    seed_x: { value: 0.02 }, //-1,1\n    seed_y: { value: 0.02 }, //-1,1\n    distortion_x: { value: 0.5 },\n    distortion_y: { value: 0.6 },\n    col_s: { value: 0.05 }\n  },\n\n  vertexShader: `varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }`,\n\n  fragmentShader: `uniform int byp; //should we apply the glitch\n    uniform sampler2D tDiffuse;\n    uniform sampler2D tDisp;\n    uniform float amount;\n    uniform float angle;\n    uniform float seed;\n    uniform float seed_x;\n    uniform float seed_y;\n    uniform float distortion_x;\n    uniform float distortion_y;\n    uniform float col_s;\n    varying vec2 vUv;\n    float rand(vec2 co){\n      return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }\n    void main() {\n      if(byp<1) {\n        vec2 p = vUv;\n        float xs = floor(gl_FragCoord.x / 0.5);\n        float ys = floor(gl_FragCoord.y / 0.5);\n        //based on staffantans glitch shader for unity https://github.com/staffantan/unityglitch\n        vec4 normal = texture2D (tDisp, p*seed*seed);\n        if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {\n          if(seed_x>0.){\n            p.y = 1. - (p.y + distortion_y);\n          }\n          else {\n            p.y = distortion_y;\n          }\n        }\n        p.x+=normal.x*seed_x*(seed/5.);\n        p.y+=normal.y*seed_y*(seed/5.);\n        //base from RGB shift shader\n        vec2 offset = amount * vec2( cos(angle), sin(angle));\n        vec4 cr = texture2D(tDiffuse, p + offset);\n        vec4 cga = texture2D(tDiffuse, p);\n        vec4 cb = texture2D(tDiffuse, p - offset);\n        gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n      }\n      else {\n        gl_FragColor=texture2D (tDiffuse, vUv);\n      }\n    }`\n}\n\nvar GlitchPass = function(dt_size) {\n  Pass.call(this)\n  if (DigitalGlitch === undefined) console.error('THREE.GlitchPass relies on THREE.DigitalGlitch')\n  var shader = DigitalGlitch\n  this.uniforms = UniformsUtils.clone(shader.uniforms)\n  if (dt_size === undefined) dt_size = 64\n  this.uniforms['tDisp'].value = this.generateHeightmap(dt_size)\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  })\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n  this.factor = 0\n}\n\nGlitchPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: GlitchPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor)\n    this.uniforms['tDiffuse'].value = readBuffer.texture\n    this.uniforms['seed'].value = Math.random() * factor //default seeding\n    this.uniforms['byp'].value = 0\n    if (factor) {\n      this.uniforms['amount'].value = (Math.random() / 90) * factor\n      this.uniforms['angle'].value = _Math.randFloat(-Math.PI, Math.PI) * factor\n      this.uniforms['distortion_x'].value = _Math.randFloat(0, 1) * factor\n      this.uniforms['distortion_y'].value = _Math.randFloat(0, 1) * factor\n      this.uniforms['seed_x'].value = _Math.randFloat(-0.3, 0.3) * factor\n      this.uniforms['seed_y'].value = _Math.randFloat(-0.3, 0.3) * factor\n    } else this.uniforms['byp'].value = 1\n    this.quad.material = this.material\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  },\n\n  generateHeightmap: function(dt_size) {\n    var data_arr = new Float32Array(dt_size * dt_size * 3)\n    var length = dt_size * dt_size\n\n    for (var i = 0; i < length; i++) {\n      var val = _Math.randFloat(0, 1)\n      data_arr[i * 3 + 0] = val\n      data_arr[i * 3 + 1] = val\n      data_arr[i * 3 + 2] = val\n    }\n\n    var texture = new DataTexture(data_arr, dt_size, dt_size, RGBFormat, FloatType)\n    texture.needsUpdate = true\n    return texture\n  }\n})\n\nexport { GlitchPass }\n","/**\n * Simple underwater shader\n * \n \n parameters:\n tDiffuse: texture\n time: this should increase with time passing\n distort_speed: how fast you want the distortion effect of water to proceed\n distortion: to what degree will the shader distort the screen \n centerX: the distortion center X coord\n centerY: the distortion center Y coord\n\n explaination:\n the shader is quite simple\n it chooses a center and start from there make pixels around it to \"swell\" then \"shrink\" then \"swell\"...\n this is of course nothing really similar to underwater scene\n but you can combine several this shaders together to create the effect you need...\n And yes, this shader could be used for something other than underwater effect, for example, magnifier effect :)\n\n * @author vergil Wang\n */\n\nimport { Mesh, OrthographicCamera, PlaneBufferGeometry, Scene, ShaderMaterial, UniformsUtils, Vector2 } from 'three'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass'\n\nvar WaterShader = {\n  uniforms: {\n    byp: { value: 0 }, //apply the glitch ?\n    texture: { type: 't', value: null },\n    time: { type: 'f', value: 0.0 },\n    factor: { type: 'f', value: 0.0 },\n    resolution: { type: 'v2', value: null }\n  },\n\n  vertexShader: `varying vec2 vUv;\n    void main(){  \n      vUv = uv; \n      vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_Position = projectionMatrix * modelViewPosition;\n    }`,\n\n  fragmentShader: `uniform int byp; //should we apply the glitch ?\n    uniform float time;\n    uniform float factor;\n    uniform vec2 resolution;\n    uniform sampler2D texture;\n    \n    varying vec2 vUv;\n    \n    void main() {  \n      if (byp<1) {\n        vec2 uv1 = vUv;\n        vec2 uv = gl_FragCoord.xy/resolution.xy;\n        float frequency = 6.0;\n        float amplitude = 0.015 * factor;\n        float x = uv1.y * frequency + time * .7; \n        float y = uv1.x * frequency + time * .3;\n        uv1.x += cos(x+y) * amplitude * cos(y);\n        uv1.y += sin(x-y) * amplitude * cos(y);\n        vec4 rgba = texture2D(texture, uv1);\n        gl_FragColor = rgba;\n      } else {\n        gl_FragColor = texture2D(texture, vUv);\n      }\n    }`\n}\n\nvar WaterPass = function(dt_size) {\n  Pass.call(this)\n  if (WaterShader === undefined) console.error('THREE.WaterPass relies on THREE.WaterShader')\n  var shader = WaterShader\n  this.uniforms = UniformsUtils.clone(shader.uniforms)\n  if (dt_size === undefined) dt_size = 64\n  this.uniforms['resolution'].value = new Vector2(dt_size, dt_size)\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  })\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\n  this.scene = new Scene()\n  this.quad = new Mesh(new PlaneBufferGeometry(2, 2), null)\n  this.quad.frustumCulled = false // Avoid getting clipped\n  this.scene.add(this.quad)\n  this.factor = 0\n  this.time = 0\n}\n\nWaterPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: WaterPass,\n\n  render: function(renderer, writeBuffer, readBuffer, deltaTime, maskActive) {\n    const factor = Math.max(0, this.factor)\n    this.uniforms['byp'].value = factor ? 0 : 1\n    this.uniforms['texture'].value = readBuffer.texture\n    this.uniforms['time'].value = this.time\n    this.uniforms['factor'].value = this.factor\n    this.time += 0.05\n    this.quad.material = this.material\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      renderer.render(this.scene, this.camera)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      renderer.render(this.scene, this.camera)\n    }\n  }\n})\n\nexport { WaterPass }\n","import * as THREE from 'three';\nimport React, { useRef, useMemo, useEffect } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nimport { GlitchPass } from './post/Glitchpass';\nimport { WaterPass } from './post/Waterpass';\n\nextend({\n    EffectComposer,\n    ShaderPass,\n    RenderPass,\n    WaterPass,\n    UnrealBloomPass,\n    FilmPass,\n    GlitchPass\n});\n\nexport default function Effects({ down }) {\n    const composer = useRef();\n    const { scene, gl, size, camera } = useThree();\n    const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [\n        size\n    ]);\n    useEffect(() => void composer.current.setSize(size.width, size.height), [\n        size\n    ]);\n    useFrame(() => composer.current.render(), 1);\n    return (\n        <effectComposer ref={composer} args={[gl]}>\n            <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n            {/* <waterPass attachArray=\"passes\" factor={1.5} /> */}\n            <unrealBloomPass\n                attachArray=\"passes\"\n                args={[aspect, 0.5, 2, 0.005]}\n            />\n            <glitchPass attachArray=\"passes\" factor={down ? 1 : 0} />\n        </effectComposer>\n    );\n}\n","import * as THREE from 'three';\nimport React, { useState, useCallback, useRef } from 'react';\n\nimport {\n    curry,\n    findIndex,\n    propEq,\n    adjust,\n    assoc,\n    sum,\n    map,\n    append,\n    fromPairs\n} from 'ramda';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport * as perlin from './perlin';\nimport Effects from './Effects';\nimport './styles.css';\n\nconst Waves = ({ groups, noisefn, ...props }) => {\n    const mesh = useRef();\n    useFrame(state => {\n        const time = state.clock.getElapsedTime();\n        // mesh.current.rotation.x = Math.sin(time / 4);\n        // mesh.current.rotation.y = Math.sin(time / 2);\n        const groupObjects = map(\n            group => fromPairs(map(({ name, value }) => [name, value], group)),\n            groups\n        );\n        for (var i = 0; i < mesh.current.geometry.vertices.length; i++) {\n            const { x, y } = mesh.current.geometry.vertices[i];\n            const groupValues = map(\n                ({ coefficient, magnitude, speed, move }) =>\n                    noisefn(\n                        x * coefficient,\n                        y * coefficient + time * move,\n                        time * speed\n                    ) * magnitude,\n                groupObjects\n            );\n            mesh.current.geometry.vertices[i].z = sum(groupValues);\n        }\n        mesh.current.geometry.verticesNeedUpdate = true;\n    });\n    return (\n        <group {...props}>\n            <mesh ref={mesh}>\n                <planeGeometry attach=\"geometry\" args={[100, 200, 200, 200]} />\n                <meshPhongMaterial attach=\"material\" color=\"red\" wireframe />\n            </mesh>\n        </group>\n    );\n};\n\nconst NumberControlGroup = ({ name, value, setValue, step }) => (\n    <div className=\"control-group\">\n        <label htmlFor={name}>{name}</label>\n        <input\n            name={name}\n            type=\"number\"\n            value={value}\n            step={step}\n            onChange={event => setValue(event.target.value)}\n        />\n    </div>\n);\n\nconst Control = ({ controlGroups, setValue }) => (\n    <div className=\"controls\">\n        {controlGroups.map((controls, i) => (\n            <ControlGroup key={i} setValue={setValue(i)} controls={controls} />\n        ))}\n    </div>\n);\n\nconst ControlGroup = ({ controls, setValue }) => (\n    <div className=\"control\">\n        {controls.map(control => (\n            <NumberControlGroup\n                key={control.name}\n                setValue={setValue(control.name)}\n                {...control}\n            />\n        ))}\n    </div>\n);\n\nfunction App() {\n    const [down, set] = useState(false);\n\n    const [groups, setGroups] = useState([\n        [\n            { name: 'coefficient', value: 0.08, step: 0.01 },\n            { name: 'magnitude', value: 18, step: 1 },\n            { name: 'speed', value: 0, step: 1 },\n            { name: 'move', value: 2, step: 1 }\n        ]\n    ]);\n\n    const setValue = curry((groupIndex, name, value) => {\n        const controlIndex = findIndex(\n            propEq('name', name),\n            groups[groupIndex]\n        );\n        const updated = adjust(\n            groupIndex,\n            () =>\n                adjust(\n                    controlIndex,\n                    () =>\n                        assoc('value', value, groups[groupIndex][controlIndex]),\n                    groups[groupIndex]\n                ),\n            groups\n        );\n        setGroups(updated);\n    });\n    const addControl = () =>\n        setGroups(\n            append(\n                [\n                    { name: 'coefficient', value: 0.08, step: 0.01 },\n                    { name: 'magnitude', value: 18, step: 1 },\n                    { name: 'speed', value: 0, step: 1 },\n                    { name: 'move', value: 2, step: 1 }\n                ],\n                groups\n            )\n        );\n\n    const mouse = useRef([0, 0]);\n    const onMouseMove = useCallback(\n        ({ clientX: x, clientY: y }) =>\n            (mouse.current = [\n                x - window.innerWidth / 2,\n                y - window.innerHeight / 2\n            ]),\n        []\n    );\n    const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n    return (\n        <>\n            <Canvas\n                shadowMap\n                pixelRatio={Math.min(2, isMobile ? window.devicePixelRatio : 1)}\n                camera={{\n                    rotation: [(60 * Math.PI) / 180, 0, 0],\n                    position: [0, -80, 40]\n                }}\n                onMouseMove={onMouseMove}\n                onMouseUp={() => set(false)}\n                onMouseDown={() => set(true)}\n                gl={{\n                    alpha: false,\n                    antialias: true,\n                    logarithmicDepthBuffer: true\n                }}\n                onCreated={({ gl }) => {\n                    gl.setClearColor('D0D0D0');\n                    gl.toneMapping = THREE.ACESFilmicToneMapping;\n                    gl.outputEncoding = THREE.sRGBEncoding;\n                }}\n            >\n                <fog attach=\"fog\" args={['black', 10, 200]} />\n                <Waves\n                    groups={groups}\n                    noisefn={perlin.perlin3}\n                    position={[0, 0, -10]}\n                    scale={[1.5, 1, 1]}\n                />\n\n                <ambientLight intensity={1} />\n                <Effects down={down} />\n            </Canvas>\n            <div className=\"add-control\" onClick={addControl}>\n                +\n            </div>\n            <Control controlGroups={groups} setValue={setValue} />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}